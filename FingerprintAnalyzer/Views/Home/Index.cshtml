@model FingerprintAnalyzer.Models.FingerPrintViewModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome to FingerPrint Analyzer</h1>
</div>

@using (Html.BeginForm("UploadFile", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.File, new { htmlAttributes = new { @class = "form-control", @type="file", @onchange="loadFile(event)"} })
                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" id="btnUpload" class="btn btn-primary" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 text-success">
                @ViewBag.FileStatus
            </div>
        </div>
    </div>
    @Html.HiddenFor(x => x.OriginImageData)
    @if (Model != null && Model.OriginImageData != null)
    {
        <div class="form-group">
            <img id="originImg" src="data:image;base64,@Convert.ToBase64String(Model.OriginImageData)" />
            <img id="bwImg" src="data:image;base64,@Convert.ToBase64String(Model.BlackedImageData)" />
            <img id="skeletonImg" src="data:image;base64,@Convert.ToBase64String(Model.SkeletonImageData)" />
        </div>
    }
    else
    {
        <img id="output" />
    }
}

<script>
  var loadFile = function(event) {
    var output = document.getElementById('output');
    output.src = URL.createObjectURL(event.target.files[0]);
    output.onload = function() {
      URL.revokeObjectURL(output.src)
    }
  };
</script>


